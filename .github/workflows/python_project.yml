name: Python Application

on:
#  push:
 #   branches:
  #    - main
      
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  python_project:
    if: ${{ github.event.inputs.environment == 'prod' }}
    runs-on: ubuntu:latest
   

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install Python and pip
        run: |
          apt-get update
          apt-get install -y python3 python3-pip make docker.io

      - name: Verify installations
        run: |
         python3 --version
         pip3 --version
         make --version
         docker --version
        
      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
          
      - name: Running Python Project
        run: |
          make setup
        # make testp
        #  make lint
        #  make coverage
      - name: Install Docker
        run: |
         apt-get update
         apt-get install -y docker.io

      - name: Start Docker daemon
        run: |
           sudo dockerd --host=unix:///var/run/docker.sock > /tmp/dockerd.log 2>&1 &
           # Wait until docker daemon is ready
           for i in {1..30}; do
             if docker info >/dev/null 2>&1; then
               echo "Docker is ready!"
               break
             fi
             sleep 2
           done

      - name: Build Docker image
        run: docker build -t myapp:latest .     
        
